{"version":3,"sources":["../../src/repeatableMockFunctionBuilder.js"],"names":["buildResponse","matchResponse","response","status","statusCode","headers","body","content","config","repeatMap","request","repeatMode","toUpperCase","baseMockFunction","req","res","invocations","repeated"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,aAAD,EAAgBC,QAAhB;AAAA,SAA6BD,cAChDE,MADgD,CACzCD,SAASE,UADgC,EAEhDC,OAFgD,CAExCH,SAASG,OAF+B,EAGhDC,IAHgD,CAG3CJ,SAASK,OAHkC,CAA7B;AAAA,CAAtB;;kBAKe,UAACC,MAAD,EAASC,SAAT,EAAoBC,OAApB,EAA6BR,QAA7B,EAA0C;AACvD,MAAMS,aAAaH,UAAUA,OAAOG,UAAjB,IAA+BH,OAAOG,UAAP,CAAkBC,WAAlB,EAAlD;AACA,MAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN;AAAA,WAAcf,cAAce,GAAd,EAAmBb,QAAnB,CAAd;AAAA,GAAzB;;AAEA,MAAIS,eAAe,OAAnB,EAA4B;AAC1B,WAAOE,gBAAP;AACD;;AANsD,8BAQrBJ,UAAU,gCAAeC,OAAf,CAAV,CARqB;AAAA,MAQ/CM,WAR+C,yBAQ/CA,WAR+C;AAAA,MAQlCC,QARkC,yBAQlCA,QARkC;;;AAUvD,MAAID,eAAeC,QAAnB,EAA6B;AAC3B,QAAIN,eAAe,MAAnB,EAA2B;AACzB,aAAOE,gBAAP;AACD;AACF;;AAED,SAAO,mBAAKA,gBAAL,CAAP;AACD,C","file":"repeatableMockFunctionBuilder.js","sourcesContent":["import { once } from 'xhr-mock';\nimport buildRequestId from './requestIdBuilder';\n\nconst buildResponse = (matchResponse, response) => matchResponse\n  .status(response.statusCode)\n  .headers(response.headers)\n  .body(response.content);\n\nexport default (config, repeatMap, request, response) => {\n  const repeatMode = config && config.repeatMode && config.repeatMode.toUpperCase();\n  const baseMockFunction = (req, res) => buildResponse(res, response);\n\n  if (repeatMode === 'FIRST') {\n    return baseMockFunction;\n  }\n\n  const { invocations, repeated } = repeatMap[buildRequestId(request)];\n\n  if (invocations >= repeated) {\n    if (repeatMode === 'LAST') {\n      return baseMockFunction;\n    }\n  }\n\n  return once(baseMockFunction);\n};\n"]}