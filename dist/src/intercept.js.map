{"version":3,"sources":["../../src/intercept.js"],"names":["proxyIntercept","port","callback","realXHR","req","res","then","finalResponse","builtRequest","global","XMLHttpRequest","xhrMock","setup","use"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;;;2cAJA;;AAMA,IAAMA,iBAAiB,SAAjBA,cAAiB;AAAA,MAACC,IAAD,uEAAQ,IAAR;AAAA,MAAcC,QAAd;AAAA,MAAwBC,OAAxB;AAAA;AAAA,uEAAoC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAoB,oBAAMD,GAAN,EAAWC,GAAX,EAC5EC,IAD4E;AAAA,oFACvE,iBAAOC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,sCADF,GACiB,8BAAaJ,GAAb,EAAkBG,aAAlB,CADjB;AAAA;AAAA,iCAGE,6BAAkBC,YAAlB,EAAgCP,IAAhC,EAAsC,IAAtC,EAA4CE,OAA5C,CAHF;;AAAA;;AAKJ,8BAAID,QAAJ,EAAcA,SAASM,YAAT;;AALV,2DAOGH,GAPH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADuE;;AAAA;AAAA;AAAA;AAAA,kBAApB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;kBAWe,UAACJ,IAAD,EAAOC,QAAP,EAAoB;AACjC,MAAMC,UAAUM,OAAOC,cAAvB;;AAEAC,oBAAQC,KAAR;AACAD,oBAAQE,GAAR,CAAYb,eAAeC,IAAf,EAAqBC,QAArB,EAA+BC,OAA/B,CAAZ;AACD,C","file":"intercept.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\n\nimport xhrMock, { proxy } from 'xhr-mock';\nimport buildRequest from './requestBuilder';\nimport submitRequestData from './submitRequest';\n\nconst proxyIntercept = (port = 9091, callback, realXHR) => async (req, res) => proxy(req, res)\n  .then(async (finalResponse) => {\n    const builtRequest = buildRequest(req, finalResponse);\n\n    await submitRequestData(builtRequest, port, true, realXHR);\n\n    if (callback) callback(builtRequest);\n\n    return res;\n  });\n\nexport default (port, callback) => {\n  const realXHR = global.XMLHttpRequest;\n\n  xhrMock.setup();\n  xhrMock.use(proxyIntercept(port, callback, realXHR));\n};\n"]}